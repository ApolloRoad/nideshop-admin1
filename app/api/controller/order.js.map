{
    "version": 3,
    "sources": [
        "..\\..\\..\\src\\api\\controller\\order.js"
    ],
    "names": [
        "Base",
        "require",
        "moment",
        "module",
        "exports",
        "adminListAction",
        "orderList",
        "model",
        "page",
        "countSelect",
        "newOrderList",
        "item",
        "data",
        "goodsList",
        "where",
        "order_id",
        "id",
        "select",
        "goodsCount",
        "forEach",
        "v",
        "number",
        "order_status_text",
        "getOrderStatusText",
        "handleOption",
        "getOrderHandleOption",
        "push",
        "success",
        "listAction",
        "user_id",
        "think",
        "userId",
        "detailAction",
        "orderId",
        "get",
        "orderInfo",
        "find",
        "isEmpty",
        "fail",
        "province_name",
        "province",
        "getField",
        "city_name",
        "city",
        "district_name",
        "district",
        "full_region",
        "latestExpressInfo",
        "getLatestOrderExpress",
        "express",
        "orderGoods",
        "add_time",
        "unix",
        "format",
        "final_pay_time",
        "order_status",
        "submitAction",
        "addressId",
        "post",
        "checkedAddress",
        "freightPrice",
        "checkedGoodsList",
        "session_id",
        "checked",
        "goodsTotalPrice",
        "cartItem",
        "retail_price",
        "couponId",
        "couponPrice",
        "orderTotalPrice",
        "actualPrice",
        "currentTime",
        "parseInt",
        "getTime",
        "order_sn",
        "generateOrderNumber",
        "consignee",
        "name",
        "mobile",
        "province_id",
        "city_id",
        "district_id",
        "address",
        "freight_price",
        "postscript",
        "coupon_id",
        "coupon_price",
        "goods_price",
        "order_price",
        "actual_price",
        "add",
        "orderGoodsData",
        "goodsItem",
        "goods_id",
        "goods_sn",
        "product_id",
        "goods_name",
        "list_pic_url",
        "market_price",
        "goods_specifition_name_value",
        "goods_specifition_ids",
        "addMany",
        "clearBuyGoods",
        "expressAction",
        "cancelAction",
        "deleteInfo",
        "delete"
    ],
    "mappings": "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",
    "file": "..\\..\\..\\src\\api\\controller\\order.js",
    "sourcesContent": [
        "const Base = require('./base.js');\nconst moment = require('moment');\n\nmodule.exports = class extends Base {\n    /**\n   * 获取订单列表\n   * @return {Promise} []\n   */\n  async adminListAction() {\n    const orderList = await this.model('order').page(1, 10000).countSelect();\n    const newOrderList = [];\n    for (const item of orderList.data) {\n      // 订单的商品\n      item.goodsList = await this.model('order_goods').where({ order_id: item.id }).select();\n      item.goodsCount = 0;\n      item.goodsList.forEach(v => {\n        item.goodsCount += v.number;\n      });\n\n      // 订单状态的处理\n      item.order_status_text = await this.model('order').getOrderStatusText(item.id);\n\n      // 可操作的选项\n      item.handleOption = await this.model('order').getOrderHandleOption(item.id);\n\n      newOrderList.push(item);\n    }\n    orderList.data = newOrderList;\n\n    return this.success(orderList);\n  }\n  /**\n   * 获取订单列表\n   * @return {Promise} []\n   */\n  async listAction() {\n    const orderList = await this.model('order').where({ user_id: think.userId }).page(1, 10).countSelect();\n    const newOrderList = [];\n    for (const item of orderList.data) {\n      // 订单的商品\n      item.goodsList = await this.model('order_goods').where({ order_id: item.id }).select();\n      item.goodsCount = 0;\n      item.goodsList.forEach(v => {\n        item.goodsCount += v.number;\n      });\n\n      // 订单状态的处理\n      item.order_status_text = await this.model('order').getOrderStatusText(item.id);\n\n      // 可操作的选项\n      item.handleOption = await this.model('order').getOrderHandleOption(item.id);\n\n      newOrderList.push(item);\n    }\n    orderList.data = newOrderList;\n\n    return this.success(orderList);\n  }\n\n  async detailAction() {\n    const orderId = this.get('orderId');\n    const orderInfo = await this.model('order').where({ user_id: think.userId, id: orderId }).find();\n\n    if (think.isEmpty(orderInfo)) {\n      return this.fail('订单不存在');\n    }\n\n    orderInfo.province_name = await this.model('region').where({ id: orderInfo.province }).getField('name', true);\n    orderInfo.city_name = await this.model('region').where({ id: orderInfo.city }).getField('name', true);\n    orderInfo.district_name = await this.model('region').where({ id: orderInfo.district }).getField('name', true);\n    orderInfo.full_region = orderInfo.province_name + orderInfo.city_name + orderInfo.district_name;\n\n    const latestExpressInfo = await this.model('order_express').getLatestOrderExpress(orderId);\n    orderInfo.express = latestExpressInfo;\n\n    const orderGoods = await this.model('order_goods').where({ order_id: orderId }).select();\n\n    // 订单状态的处理\n    orderInfo.order_status_text = await this.model('order').getOrderStatusText(orderId);\n    orderInfo.add_time = moment.unix(orderInfo.add_time).format('YYYY-MM-DD HH:mm:ss');\n    orderInfo.final_pay_time = moment('001234', 'Hmmss').format('mm:ss');\n    // 订单最后支付时间\n    if (orderInfo.order_status === 0) {\n      // if (moment().subtract(60, 'minutes') < moment(orderInfo.add_time)) {\n      orderInfo.final_pay_time = moment('001234', 'Hmmss').format('mm:ss');\n      // } else {\n      //     //超过时间不支付，更新订单状态为取消\n      // }\n    }\n\n    // 订单可操作的选择,删除，支付，收货，评论，退换货\n    const handleOption = await this.model('order').getOrderHandleOption(orderId);\n\n    return this.success({\n      orderInfo: orderInfo,\n      orderGoods: orderGoods,\n      handleOption: handleOption\n    });\n  }\n\n  /**\n   * 提交订单\n   * @returns {Promise.<void>}\n   */\n  async submitAction() {\n    // 获取收货地址信息和计算运费\n    const addressId = this.post('addressId');\n    const checkedAddress = await this.model('address').where({ id: addressId }).find();\n    if (think.isEmpty(checkedAddress)) {\n      return this.fail('请选择收货地址');\n    }\n    const freightPrice = 0.00;\n\n    // 获取要购买的商品\n    const checkedGoodsList = await this.model('cart').where({ user_id: think.userId, session_id: 1, checked: 1 }).select();\n    if (think.isEmpty(checkedGoodsList)) {\n      return this.fail('请选择商品');\n    }\n\n    // 统计商品总价\n    let goodsTotalPrice = 0.00;\n    for (const cartItem of checkedGoodsList) {\n      goodsTotalPrice += cartItem.number * cartItem.retail_price;\n    }\n\n    // 获取订单使用的优惠券\n    const couponId = this.post('couponId');\n    const couponPrice = 0.00;\n    if (!think.isEmpty(couponId)) {\n\n    }\n\n    // 订单价格计算\n    const orderTotalPrice = goodsTotalPrice + freightPrice - couponPrice; // 订单的总价\n    const actualPrice = orderTotalPrice - 0.00; // 减去其它支付的金额后，要实际支付的金额\n    const currentTime = parseInt(this.getTime() / 1000);\n\n    const orderInfo = {\n      order_sn: this.model('order').generateOrderNumber(),\n      user_id: think.userId,\n\n      // 收货地址和运费\n      consignee: checkedAddress.name,\n      mobile: checkedAddress.mobile,\n      province: checkedAddress.province_id,\n      city: checkedAddress.city_id,\n      district: checkedAddress.district_id,\n      address: checkedAddress.address,\n      freight_price: 0.00,\n\n      // 留言\n      postscript: this.post('postscript'),\n\n      // 使用的优惠券\n      coupon_id: 0,\n      coupon_price: couponPrice,\n\n      add_time: currentTime,\n      goods_price: goodsTotalPrice,\n      order_price: orderTotalPrice,\n      actual_price: actualPrice\n    };\n\n    // 开启事务，插入订单信息和订单商品\n    const orderId = await this.model('order').add(orderInfo);\n    orderInfo.id = orderId;\n    if (!orderId) {\n      return this.fail('订单提交失败');\n    }\n\n    // 统计商品总价\n    const orderGoodsData = [];\n    for (const goodsItem of checkedGoodsList) {\n      orderGoodsData.push({\n        order_id: orderId,\n        goods_id: goodsItem.goods_id,\n        goods_sn: goodsItem.goods_sn,\n        product_id: goodsItem.product_id,\n        goods_name: goodsItem.goods_name,\n        list_pic_url: goodsItem.list_pic_url,\n        market_price: goodsItem.market_price,\n        retail_price: goodsItem.retail_price,\n        number: goodsItem.number,\n        goods_specifition_name_value: goodsItem.goods_specifition_name_value,\n        goods_specifition_ids: goodsItem.goods_specifition_ids\n      });\n    }\n\n    await this.model('order_goods').addMany(orderGoodsData);\n    await this.model('cart').clearBuyGoods();\n\n    return this.success({ orderInfo: orderInfo });\n  }\n\n  /**\n   * 查询物流信息\n   * @returns {Promise.<void>}\n   */\n  async expressAction() {\n    const orderId = this.get('orderId');\n    if (think.isEmpty(orderId)) {\n      return this.fail('订单不存在');\n    }\n    const latestExpressInfo = await this.model('order_express').getLatestOrderExpress(orderId);\n    return this.success(latestExpressInfo);\n  }\n\n  // 取消订单\n  async cancelAction () {\n    const orderId = this.get('orderId');\n    const deleteInfo = await this.model('order').where({ id: orderId }).delete();\n    return this.success(deleteInfo);\n  }\n};\n"
    ]
}